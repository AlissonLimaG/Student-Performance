import streamlit as st
import pandas as pd
import joblib

# Carregar o modelo treinado
model = joblib.load('modelo_adaBoost.pkl')

# T√≠tulo da p√°gina
st.title("Previs√£o de Nota Final - Estudantes do Ensino M√©dio")

# Descri√ß√£o
st.write("Insira as informa√ß√µes do estudante para prever se ele ir√° **passar** ou **reprovar**.")

# Formul√°rio para entrada de dados
with st.form("student_data"):
    # Campos de entrada
    G2 = st.selectbox("Segundo ano",[0,1], format_func=lambda x: ["REPROVADO","APROVADO"][x])
    G1 = st.selectbox("Primeiro ano",[0,1], format_func=lambda x: ["REPROVADO","APROVADO"][x] )
    failures = st.selectbox("N√∫mero de reprova√ß√µes:", [0, 1, 2, 4])
    Medu = st.selectbox("Educa√ß√£o da m√£e:", [0, 1, 2, 3, 4], format_func=lambda x: ["Nenhuma","Educa√ß√£o prim√°ria","5¬∫ ano ao 9¬∫ ano","educa√ß√£o secund√°ria","educa√ß√£o superior"][x])
    paid = st.selectbox("Aulas extras pagas:", [0, 1], format_func=lambda x: "Sim" if x == 1 else "N√£o")
    Fedu = st.selectbox("Educa√ß√£o do pai:", [0, 1, 2, 3, 4], format_func=lambda x: ["Nenhuma","Educa√ß√£o prim√°ria","5¬∫ ano ao 9¬∫ ano","educa√ß√£o secund√°ria","educa√ß√£o superior"][x])
    Fjob = st.selectbox("Trabalho do pai:", [0, 1, 2, 3, 4,],
                        format_func=lambda x: ["Dono de casa", "Sa√∫de", "Outros", "Servi√ßos civis", "Professor"][x])
    Mjob = st.selectbox("Trabalho da m√£e:", [0, 1, 3, 4, 2],
                        format_func=lambda x: ["Dona de casa", "Sa√∫de", "Outros", "Servi√ßos civis", "Professora"][x])
    guardian = st.selectbox("Guardi√£o legal:", [0, 1, 2], format_func=lambda x: ["Pai", "M√£e", "Outros"][x])
    age = st.selectbox("Idade:", [0, 1, 2, 3, 4, 5, 6, 7],
                       format_func=lambda x: ["15", "16", "17", "18", "19", "20", "21", "22"][x])
    schoolsup = st.selectbox("Apoio educacional extra:", [0, 1], format_func=lambda x: "Sim" if x == 1 else "N√£o")
    higher = st.selectbox("Deseja fazer ensino superior:", [0, 1], format_func=lambda x: "Sim" if x == 1 else "N√£o")

    # Bot√£o de envio
    submit = st.form_submit_button(label='Fazer Previs√£o')

# L√≥gica de previs√£o, que ser√° executada quando o bot√£o for pressionado
if submit:
    # Criar um dataframe com os dados do formul√°rio
    input_data = pd.DataFrame({
        'G2': [G2],
        'G1': [G1],
        'failures': [failures],
        'Medu': [Medu],
        'paid': [paid],
        'Fedu': [Fedu],
        'Fjob': [Fjob],
        'Mjob': [Mjob],
        'guardian': [guardian],
        'age': [age],
        'schoolsup': [schoolsup],
        'higher': [higher]
    })

    final_grade = model.predict(input_data)

    if final_grade == 1:
        st.success(f"Com base nos dados informados, a an√°lise feita indica que o estudante ir√° **passar**! üéâ")
    else:
        st.error(f"Com base nos dados informados, a an√°lise feita indica que o estudante ir√° **reprovar**. üò¢")
